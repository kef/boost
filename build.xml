<?xml version="1.0" encoding="UTF-8"?>

<!--Targets either do stuff or specify dependencies; never both. -->
<!--Dependency targets begin with "_". -->

<!-- FIXME: SC502 Goals: -->
<!-- FIXME: SC502 Checkstyle run -->
<!-- FIXME: SC502 Checkstyle report (into artifacts area) -->
<!-- FIXME: SC502 Checkstyle fail on error -->
<!-- FIXME: SC502 Simian run -->
<!-- FIXME: SC502 Simian report (into artifacts area) -->
<!-- FIXME: SC502 Simian fail on error -->
<!-- FIXME: SC502 Instrument classes (cobertura.sourceforge.net) -->
<!-- FIXME: SC502 Run AtomicTests against instrumented classes -->
<!-- FIXME: SC502 Atomic test coverage report (into artifacts area) -->
<!-- FIXME: SC502 Fail on < 100% atomic test coverage -->
<!-- FIXME: SC502 Run "other" tests against raw classes -->
<!-- FIXME: SC502 Generate javadoc (if you're doing this) -->
<!-- FIXME: SC502 Package up jars or whatever (using non instrumented classes) -->

<!-- FIXME: SC502 Refactors: -->
<!-- FIXME: SC502 Check environment properties (fail if not correctly set) -->
<!-- FIXME: SC502 Include profile (properties).  One property should specify a properties file somewhere, usually under <project>/conf/profile -->

<project name="boost" default="_all" basedir=".">
    <property name="build.dir" location="build"/>
    <property name="lib.dir" location="lib"/>
    <property name="src.dir" value="src"/>
    <property name="class.dir" location="${build.dir}/classes"/>
    <property name="artifacts.dir" location="${build.dir}/artifacts"/>
    <property name="reports.dir" location="${artifacts.dir}/reports"/>
    <property name="jars.dir" location="${artifacts.dir}/jars"/>
    <property name="test.report.dir" location="${reports.dir}/test"/>
    <property name="test.xml.report.dir" location="${test.report.dir}/xml"/>
    <property name="test.class" value="au.net.netstorm.boost.testing.suite.AtomicTestSuite"/>

    <path id="test.lib.classpath">
        <pathelement location="${class.dir}"/>
        <fileset dir="${lib.dir}">
            <include name="junit/junit-3.8.1.jar"/>
        </fileset>
    </path>

    <property name="edge.src.dir" location="${src.dir}/edge/java"/>
    <property name="prod.src.dir" location="${src.dir}/prod/java"/>
    <property name="test.src.dir" location="${src.dir}/test/java"/>
    <property name="edge.class.dir" location="${class.dir}/edge"/>
    <property name="prod.class.dir" location="${class.dir}/prod"/>
    <property name="test.class.dir" location="${class.dir}/test"/>
    <path id="edge.classpath"/>
    <path id="prod.classpath">
        <path location="${edge.class.dir}"/>
    </path>
    <path id="test.classpath">
        <!-- FIXME: SC502 Remove duplication with above. -->
        <path location="${edge.class.dir}"/>
        <path location="${prod.class.dir}"/>
    </path>

    <!-- FIXME: SC502 Put "check_tests" target back in ... when it no longer breaks the build ! -->
    <!-- FIXME: SC502 Put jar target back in with modified classpaths -->
    <target name="_all" depends="clean,compile,run_tests"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- FIXME: SC502 Consider the naming of "prod" and "edge" -->

    <!-- FIXME: SC502 This is just a dependency.  -->
    <target name="compile">
        <macro_javac srcdir="${edge.src.dir}" destdir="${edge.class.dir}" classpathref="edge.classpath"/>
        <macro_javac srcdir="${prod.src.dir}" destdir="${prod.class.dir}" classpathref="prod.classpath"/>
        <macro_javac srcdir="${test.src.dir}" destdir="${test.class.dir}" classpathref="test.classpath"/>
    </target>

    <target name="build_jar">
        <mkdir dir="${jars.dir}"/>
        <jar jarfile="${jars.dir}/boost.jar" basedir="${class.dir}"/>
    </target>

    <!-- FIXME: SC502 "runTest" crashes when executed in Andy's Eclipse :( -->
    <!-- FIXME: SC502 Rename to run_atomic_tests when atomic tests are run. -->
    <target name="run_tests">
        <mkdir dir="${test.xml.report.dir}"/>
        <junit failureproperty="tests.failed">
            <test name="${test.class}" todir="${test.xml.report.dir}"/>
            <formatter type="xml"/>
            <sysproperty key="test.classpath" value="${class.dir}"/>
            <classpath refid="test.lib.classpath"/>
        </junit>
    </target>

    <target name="check_tests">
        <junitreport todir="${test.report.dir}" tofile="TestReport.xml">
            <fileset dir="${test.xml.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.report.dir}"/>
        </junitreport>
        <fail if="tests.failed" message="ONE OR MORE TESTS FAILED."/>
    </target>

    <macrodef name="macro_javac">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <attribute name="classpathref"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <javac srcdir="@{srcdir}" destdir="@{destdir}" classpathref="@{classpathref}" debug="true"/>
        </sequential>
    </macrodef>
</project>
<?xml version="1.0" encoding="UTF-8"?>

<!--Targets either do stuff or specify dependencies; never both. -->
<!--Dependency targets begin with "_". -->

<!-- FIXME: SC502 Goals: -->
<!-- FIXME: SC502 Checkstyle run -->
<!-- FIXME: SC502 Checkstyle report (into artifacts area) -->
<!-- FIXME: SC502 Checkstyle fail on error -->
<!-- FIXME: SC502 Simian run -->
<!-- FIXME: SC502 Simian report (into artifacts area) -->
<!-- FIXME: SC502 Simian fail on error -->
<!-- FIXME: SC502 Instrument classes (cobertura.sourceforge.net) -->
<!-- FIXME: SC502 Run AtomicTests against instrumented classes -->
<!-- FIXME: SC502 Atomic test coverage report (into artifacts area) -->
<!-- FIXME: SC502 Fail on < 100% atomic test coverage -->
<!-- FIXME: SC502 Run "other" tests against raw classes -->
<!-- FIXME: SC502 Generate javadoc (if you're doing this) -->
<!-- FIXME: SC502 Package up jars or whatever (using non instrumented classes) -->
<!-- FIXME: SC502 Move from JDK 1.5 back to JDK 1.4 compliance target -->

<!-- FIXME: SC502 Refactors: -->
<!-- FIXME: SC502 Order targets in file alphabetically or functionally or chronologically ... not randomly -->
<!-- FIXME: SC502 Use target name underscore prefix consistently ... or lose it. -->
<!-- FIXME: SC502 Check environment properties (fail if not correctly set) -->
<!-- FIXME: SC502 Include profile (properties).  One property should specify a properties file somewhere, usually under <project>/conf/profile -->

<project name="boost" default="_all" basedir=".">
    <property name="build.dir" location="build"/>
    <property name="lib.dir" location="lib"/>
    <property name="src.dir" value="src"/>
    <property name="class.dir" location="${build.dir}/classes"/>
    <property name="coverage.dir" location="${build.dir}/coverage"/>
    <property name="instrumented.dir" location="${coverage.dir}/instrumented"/>
    <property name="artifacts.dir" location="${build.dir}/artifacts"/>
    <property name="reports.dir" location="${artifacts.dir}/reports"/>
    <property name="coverage.reports.dir" location="${reports.dir}/coverage"/>
    <property name="jars.dir" location="${artifacts.dir}/jars"/>
    <property name="test.report.dir" location="${reports.dir}/test"/>
    <property name="test.xml.report.dir" location="${test.report.dir}/xml"/>
    <!-- FIXME: SC502 "test.class" property isn't used ... use it or lose it -->
    <property name="test.class" value="au.net.netstorm.boost.testing.suite.AtomicTestSuite"/>

    <property name="edge.src.dir" location="${src.dir}/edge/java"/>
    <property name="core.src.dir" location="${src.dir}/core/java"/>
    <property name="test.src.dir" location="${src.dir}/test/java"/>
    <property name="edge.class.dir" location="${class.dir}/edge"/>
    <property name="core.class.dir" location="${class.dir}/core"/>
    <property name="test.class.dir" location="${class.dir}/test"/>
    <property name="edge.instrumented.dir" location="${instrumented.dir}/edge"/>
    <property name="core.instrumented.dir" location="${instrumented.dir}/core"/>
    <property name="test.instrumented.dir" location="${instrumented.dir}/test"/>

    <fileset id="atomic.tests" dir="${test.src.dir}">
        <include name="**/*AtomicTest.java"/>
        <exclude name="**/*AlmostAtomicTest.java"/>
        <exclude name="**/*NotAtomicTest.java"/>
    </fileset>

    <fileset id="edge.tests" dir="${test.src.dir}">
        <include name="**/*EdgeTest.java"/>
    </fileset>

    <path id="core.coverage.classpath">
        <path location="${edge.class.dir}"/>
        <path location="${core.instrumented.dir}"/>
        <path location="${core.class.dir}"/>
        <path location="${test.class.dir}"/>
        <path refid="cobertura.classpath"/>
    </path>

    <path id="edge.coverage.classpath">
        <path location="${edge.instrumented.dir}"/>
        <path location="${edge.class.dir}"/>
        <path location="${test.class.dir}"/>
        <path refid="cobertura.classpath"/>
    </path>

    <path id="edge.classpath"/>

    <path id="core.classpath">
        <path location="${edge.class.dir}"/>
    </path>

    <path id="test.classpath">
        <path refid="core.classpath"/>
        <path location="${core.class.dir}"/>
    </path>

    <path id="cobertura.classpath">
        <fileset dir="${lib.dir}/cobertura">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- FIXME: SC502 Coverage checks for edge and tests. -->
    <target name="_all"
            depends="clean,_compile,_instrument,_run_tests,report_tests,_report_coverage,_check_tests,_check_coverage,build_jar,artifacts"/>

    <target name="_compile">
        <macro_javac srcdir="${edge.src.dir}" destdir="${edge.class.dir}" classpathref="edge.classpath"/>
        <macro_javac srcdir="${core.src.dir}" destdir="${core.class.dir}" classpathref="core.classpath"/>
        <macro_javac srcdir="${test.src.dir}" destdir="${test.class.dir}" classpathref="test.classpath"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <!-- FIXME: SC502 ? API jar which contains just primordial. -->
    <target name="build_jar">
        <!-- FIXME: SC502 boost-run.jar which contains ONLY edge/core. -->
        <mkdir dir="${jars.dir}"/>
        <jar jarfile="${jars.dir}/boost.jar">
            <fileset dir="${core.class.dir}" includes="**"/>
            <fileset dir="${edge.class.dir}" includes="**"/>
            <fileset dir="${test.class.dir}" includes="**"/>
            <fileset dir="${core.src.dir}" includes="**"/>
            <fileset dir="${edge.src.dir}" includes="**"/>
            <fileset dir="${test.src.dir}" includes="**"/>
        </jar>
    </target>

    <target name="artifacts">
        <copy file="etc/artifacts.html" tofile="${artifacts.dir}/index.html">
            <filterset>
                <filter token="BUILD_LABEL" value="${label}"/>
            </filterset>
        </copy>
    </target>


    <!-- FIXME: SC502 Rename to run_atomic_tests when atomic tests are run. -->
    <target name="_run_tests">
        <macro_junit_run tests.refid="atomic.tests" classpath.refid="core.coverage.classpath" coverage.type="core"
                         failure.property="atomic.tests.failed"/>
        <macro_junit_run tests.refid="edge.tests" classpath.refid="edge.coverage.classpath" coverage.type="edge"
                         failure.property="edge.tests.failed"/>
    </target>

    <target name="_check_tests">
        <macro_junit_check failure.property="atomic.tests.failed"/>
    </target>

    <target name="report_tests">
        <macro_junit_report/>
    </target>

    <macrodef name="macro_javac">
        <attribute name="srcdir"/>
        <attribute name="destdir"/>
        <attribute name="classpathref"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <javac srcdir="@{srcdir}" destdir="@{destdir}" classpathref="@{classpathref}" debug="true"/>
        </sequential>
    </macrodef>

    <macrodef name="macro_junit_run">
        <attribute name="tests.refid"/>
        <attribute name="classpath.refid"/>
        <attribute name="coverage.type"/>
        <attribute name="failure.property"/>
        <sequential>
            <mkdir dir="${test.xml.report.dir}"/>
            <junit fork="true" forkmode="perBatch" showoutput="true" printSummary="true" haltonfailure="false"
                   failureproperty="@{failure.property}">
                <!-- FIXME: SC502 Parameterise the coverage file for different test styles. -->
                <sysproperty key="net.sourceforge.cobertura.datafile"
                             file="${coverage.dir}/@{coverage.type}_coverage.ser"/>
                <classpath refid="@{classpath.refid}"/>
                <formatter type="xml"/>
                <formatter type="plain"/>
                <batchtest todir="${test.xml.report.dir}">
                    <fileset refid="@{tests.refid}"/>
                </batchtest>
            </junit>
        </sequential>
    </macrodef>

    <macrodef name="macro_junit_check">
        <attribute name="failure.property"/>
        <sequential>
            <fail if="@{failure.property}" message="ONE OR MORE TESTS FAILED."/>
        </sequential>
    </macrodef>

    <macrodef name="macro_junit_report">
        <sequential>
            <junitreport todir="${test.report.dir}" tofile="TestReport.xml">
                <!-- FIXME: SC502 Move fileset out.  -->
                <fileset dir="${test.xml.report.dir}">
                    <include name="TEST-*.xml"/>
                </fileset>
                <report format="frames" todir="${test.report.dir}"/>
            </junitreport>
        </sequential>
    </macrodef>

    <target name="_instrument">
        <macro_cobertura_instrument code.type="core"/>
        <macro_cobertura_instrument code.type="edge"/>
    </target>

    <target name="_report_coverage">
        <macro_cobertura_report code.type="core" report.type="atomic"/>
        <macro_cobertura_report code.type="edge" report.type="edge"/>
    </target>

    <target name="_check_coverage">
        <macro_cobertura_check code.type="core" branch.limit="100" line.limit="100"/>
        <macro_cobertura_check code.type="edge" branch.limit="100" line.limit="13"/>
    </target>

    <taskdef resource="tasks.properties" classpathref="cobertura.classpath"/>

    <macrodef name="macro_cobertura_instrument">
        <attribute name="code.type"/>
        <sequential>
            <mkdir dir="${instrumented.dir}/@{code.type}"/>
            <cobertura-instrument todir="${instrumented.dir}/@{code.type}"
                                  datafile="${coverage.dir}/@{code.type}_coverage.ser">
                <fileset dir="${class.dir}/@{code.type}">
                    <include name="**/*.class"/>
                    <exclude name="**/Xxx*.class"/>
                </fileset>
            </cobertura-instrument>
        </sequential>
    </macrodef>

    <macrodef name="macro_cobertura_report">
        <attribute name="code.type"/>
        <attribute name="report.type"/>
        <sequential>
            <mkdir dir="${coverage.reports.dir}/@{code.type}/@{report.type}"/>
            <cobertura-report destdir="${coverage.reports.dir}/@{code.type}/@{report.type}"
                              datafile="${coverage.dir}/@{code.type}_coverage.ser">
                <!-- FIXME: SC502 Parameterise -->
                <fileset dir="${core.src.dir}" includes="**/*.java"/>
                <fileset dir="${edge.src.dir}" includes="**/*.java"/>
            </cobertura-report>
        </sequential>
    </macrodef>

    <macrodef name="macro_cobertura_check">
        <attribute name="branch.limit"/>
        <attribute name="line.limit"/>
        <attribute name="code.type"/>
        <sequential>
            <cobertura-check totalbranchrate="@{branch.limit}" totallinerate="@{line.limit}"
                             failureproperty="coverage.failed" haltonfailure="true" datafile="${coverage.dir}/@{code.type}_coverage.ser"/>
        </sequential>
    </macrodef>
</project>